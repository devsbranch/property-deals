basePath: /api
swagger: "2.0"
info:
  description: This is the swagger specs for this Property Deals project
  version: "1.0.0"
  title: Property Deals
consumes:
  - application/json
  - multipart/data
produces:
  - application/json

# Paths supported by this application
paths:
  /health:
    get:
      operationId: api.endpoints.main.health
      tags:
        - health
      summary: Retrieves health status of this application
      description: Perform health check on this API
      responses:
        200:
          description: Application is functioning normally

  /welcome:
    get:
      operationId: api.endpoints.main.welcome
      tags:
        - home
      summary: Retrives welcome message
      description: Display welcome message
      responses:
        200:
          description: See a welcome message
  /user/all:
    get:
      operationId: api.endpoints.user.get_users
      tags:
        - users
      summary: Rerieves all the users
      description: Displays all users and the listings they have listed
      responses:
        200:
          description: See a JSON object of all the users

  /user/{user_id}:
    get:
      operationId: api.endpoints.user.get_user_by_id
      tags:
        - users
      summary: Retrieves user by id
      description: Displays details of user of id provided
      parameters:
        - name: user_id
          in: path
          description: retrieves user data of id provided
          type: integer
          required: true
      responses:
        200:
          description: Successfully display user info
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                first_name:
                  type: string
                last_name:
                  type: string
                other_name:
                  type: string
                gender:
                  type: string
                phone:
                  type: string
                profile_photo:
                  type: string
                cover_photo:
                  type: string
                prof_photo_loc:
                  type: string
                cover_photo_loc:
                  type: string
                date_registered:
                  type: string
                is_verified:
                  type: boolean
                username:
                  type: string
                email:
                  type: string
                acc_deactivated:
                  type: boolean
                date_to_delete_acc:
                  type: string
                user_property_listings:
                  type: array
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    desc:
                      type: string
                    date_listed:
                      type: string
                    price:
                      type: string
                    location:
                      type: string
                    images_folder:
                      type: string
                    photos:
                      type: string
                    photos_location:
                      type: string
                    type:
                      type: string
                    is_available:
                      type: boolean
                    deal_done:
                      type: boolean
                    user_id:
                      type: integer
        404:
          description: User not found.

  /user/add:
    post:
      operationId: api.endpoints.user.add_user
      tags:
        - users
      summary: Creates a user
      description: Creates a single user record
      parameters:
        - name: user
          in: body
          description: User to create. You can add other_name to the json object if the user has one.
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              other_name:
                type: string
              gender:
                type: string
              phone:
                type: string
              username:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        201:
          description: Successfully created user
        400:
          description: Invalid request